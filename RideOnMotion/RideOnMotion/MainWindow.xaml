<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RideOnMotion.UI" x:Name="MainWindow1" x:Class="RideOnMotion.UI.MainWindow"
        Title="RideOn[Motion]" Height="600" Width="800"
        MinWidth="800" MinHeight="600"
        Closing="MainWindow_Closing" WindowStartupLocation="CenterScreen" WindowState="Maximized">

    <Window.CommandBindings>
    </Window.CommandBindings>

    <DockPanel>
        <DockPanel.Background>
            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
        </DockPanel.Background>

        <StatusBar DockPanel.Dock="Bottom">
            <Image Height="16" VerticalAlignment="Center" Source="Images/KinectIcon.png" />
            <TextBlock x:Name="KinectStatusText" Text="{Binding InputStatusInfo}"></TextBlock>
            <Separator />
            <Image Height="16" VerticalAlignment="Center" Source="Images/HelicopterIcon.png" />
            <TextBlock x:Name="DroneStatusText" Text="{Binding DroneStatus}"></TextBlock>
        </StatusBar>

        <Menu DockPanel.Dock="Top" x:Name="MenuBar" IsMainMenu="True">
            <Menu.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuBarColorKey}}"/>
            </Menu.Background>
            <MenuItem Header="File">
                <MenuItem Header="Quit" Click="MenuItem_Quit_Click">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/Close_16xLG.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Input settings">
                <MenuItem Header="Keyboard Settings" Command="{Binding OpenKeyboardSettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/ToggleOfficeKeyboardScheme_7508.ico" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Drone">
                <MenuItem Header="Settings" Command="{Binding OpenDroneSettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://application:,,,/Resources/PropertyIcon.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Reconnect" Command="{Binding ReconnectDroneCommand}" />
            </MenuItem>
        </Menu>

        <Grid ShowGridLines="False">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="75" Height="Auto" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="0.5*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="100" />
                <ColumnDefinition Width="3" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="DepthViewerPanel" MinHeight="150" Grid.Row="0" Grid.Column="0" Background="Black">
                <Viewbox>
                    <Image Name="DepthImage" Width="640" Height="480" Source="{Binding InputImageSource}"/>
                </Viewbox>
            </StackPanel>

            <GroupBox Header="Status information" Grid.Row="1" Grid.Column="0" Grid.RowSpan="3">
                <StackPanel>
                    <TextBlock x:Name="InputStatusInfo" Text="{Binding InputStatusInfo}"/>
                    <TextBlock x:Name="DroneStatusInfo" Text="{Binding DroneStatusInfo}"/>
                </StackPanel>
            </GroupBox>

            <GridSplitter Grid.Column="1" Width="3" Grid.RowSpan="4" HorizontalAlignment="Center" VerticalAlignment="Stretch" />

            <!-- Main panel - Background -->
            <StackPanel Background="Black" x:Name="MainPanel" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
            </StackPanel>

            <!-- Main panel - Drone image -->
            <Viewbox Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Image Name="DroneImage" Source="{Binding DroneImageSource}" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Viewbox>

            <!-- Main panel - Input control -->
            <Viewbox Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
                <ContentPresenter Content="{Binding InputControl}" Visibility="{Binding InputControlVisibility}"/>
            </Viewbox>

            <Viewbox Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
                <!-- Main panel - Input bars controls -->
                <Grid Width="640" Height="480">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <local:DirectionDisplayControl
                        Grid.Column="0"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.NegativeRollProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.PositiveRollProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.NegativePitchProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.PositivePitchProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />
                    <local:DirectionDisplayControl
                        Grid.Column="1"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.NegativeYawProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.PositiveYawProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.PositiveGazProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.KinectProgressBarSet.NegativeGazProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />

                    <local:DirectionDisplayControl
                        Grid.Column="0"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.NegativeRollProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.PositiveRollProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.NegativePitchProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.PositivePitchProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />
                    <local:DirectionDisplayControl
                        Grid.Column="1"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.NegativeYawProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.PositiveYawProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.PositiveGazProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.KeyboardProgressBarSet.NegativeGazProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />

                    <local:DirectionDisplayControl
                        Grid.Column="0"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.NegativeRollProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.PositiveRollProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.NegativePitchProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.PositivePitchProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />
                    <local:DirectionDisplayControl
                        Grid.Column="1"
                        LeftRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.NegativeYawProgressBar}"
                        RightRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.PositiveYawProgressBar}"
                        UpRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.PositiveGazProgressBar}"
                        DownRange="{Binding Path=InputProgressBarsWrapper.GamepadProgressBarSet.NegativeGazProgressBar}"
                        CenterHeight="106"
                        CenterWidth="80"
                        />

                </Grid>
            </Viewbox>

            <DockPanel x:Name="LogPanel"  Grid.Row="3" Grid.Column="2" >
                <ListBox x:Name="LogListBox" ItemsSource="{Binding LogData}" VirtualizingPanel.ScrollUnit="Pixel"
                         FontFamily="Consolas, DejaVu Sans Mono, Terminus, System" FontSize="10pt">

                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy" Click="Logger_CopyMenuItem_Click">
                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Resources/copy.ico" MaxWidth="16" MaxHeight="16" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Name="logFilterMenuItem" Header="Log level filter">
                                <MenuItem Header="Fatal" IsCheckable="True" IsChecked="{Binding LogLevelIsFatal, Mode=TwoWay}" />
                                <MenuItem Header="Error" IsCheckable="True" IsChecked="{Binding LogLevelIsError, Mode=TwoWay}" />
                                <MenuItem Header="Warn" IsCheckable="True" IsChecked="{Binding LogLevelIsWarn, Mode=TwoWay}" />
                                <MenuItem Header="Info" IsCheckable="True" IsChecked="{Binding LogLevelIsInfo, Mode=TwoWay}" />
                                <MenuItem Header="Trace" IsCheckable="True" IsChecked="{Binding LogLevelIsTrace, Mode=TwoWay}" />
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
            </DockPanel>

            <GridSplitter Grid.Row="2" Grid.Column="2" Height="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" ResizeDirection="Rows" />
        </Grid>
    </DockPanel>
</Window>
